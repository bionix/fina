#!/bin/bash
### BEGIN INIT INFO
# Provides:          packetfilter_ipv4
# Required-Start:    $network $local_fs
# Required-Stop:     $network $local_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start packetfilter at boot time
# Description:       Enable packtfilter ipv4
### END INIT INFO



# /etc/init.d/fina
#
# Written by Tobias Klausmann klausman-fina at schwarzvogel.de

DAEMON="/sbin/fina"
NAME="fina"

# Load defaults if exists
[ -r /etc/default/fina ] && . /etc/default/fina

# Is fina disabled?
case "$ENABLE_FINA" in
  [Nn]*)
        exit 0
        ;;
esac

load_minimal() {
  # First, try to load the minimal rule set, so we have a base line we can go
  # back to if loading of the actual rule file fails
  if [[ -r /etc/fina/minimal.rules ]]; then
    echo -n 'Trying to load minimal rule set...'
    # if this fails, theres nothing we can do except print an errmsg
    MSG=$(iptables-restore < /etc/fina/minimal.rules 2>&1)
    RETVAL=$?
    if [[ $RETVAL != 0 ]]; then
      echo "failed ($MSG)" >&2
    else
      echo "ok"
    fi
  fi
}

start_fina()
{
  echo -n "Loading full ruleset..."
  MSG=$("$DAEMON" -l 2>&1)
  RETVAL=$?
  if [[ $RETVAL != 0 ]]; then
    echo "failed ($MSG)" >&2
  else
    echo "ok"
  fi
}

load_minimal()
{
  echo -n "Loading minimal ruleset..."
  MSG=$("$DAEMON" -m 2>&1)
  RETVAL=$?
  if [[ $RETVAL != 0 ]]; then
    echo "failed ($MSG)" >&2
  else
    echo "ok"
  fi
}

stop_fina()
{
  echo "There is no stop action for fina because there is no clear" >&2
  echo "and simple way to discern what the user means by 'stop'" >&2
}

case "$1" in
  start)
    echo "Starting fina: "
    load_minimal
    start_fina
    ;;
  stop)
    stop_fina
    exit 0
    ;;
  restart)
    echo -n "Restarting fina: "
    start_fina
    ;;
  minimal)
    echo -n "Loading minimal ruleset: "
    load_minimal
    ;;
  *)
    echo "Usage: $0 {start|stop|restart|minimal}"
    exit 1
    ;;
esac

exit 0
# vim:tabstop=2:expandtab:shiftwidth=2
